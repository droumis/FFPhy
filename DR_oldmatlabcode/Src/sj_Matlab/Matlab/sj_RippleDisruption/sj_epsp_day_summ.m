
function [ep] = sj_epsp_day_summ (processdir,prefixes,pdays,figopt1,saveg1,figopt2, saveg2, savedata)

% Uses "day" files generated by sj_epsp_amp_day
% epsp data for 1 day each to create summary plot for epsp ampl and adding later, epsp slope
% Output: Make normalized plot with Z-scores across days and tetrodes

% Eg
% sj_epsp_day_summ('/data25/sjadhav/RippleInterruption/ProcessedData/EPSP',{'REc';'REd';'REe';'REf'},[1:8],1,0,0,0,0);

% pdays are days you want to generate plots for
% figopt1: Make normalized plots per day across all tetrodes
% saveg1: Save individual day graphs and full-summary graph
% figopt2: Make plots per novel and familiar days
% saveg2: Save figopt2 graphs
% savedata: Save mat file with data

%%
if nargin<5,
    figopt1 = 0;
end
if nargin<6,
    saveg1 = 0;
end
if nargin<7,
    figopt2 = 0;
end
if nargin<8,
    saveg2 = 0;
end
if nargin<9,
    savedata = 0;
end
%%

if length(pdays)==1
    figopt2=0;
end



savedir = '/data25/sjadhav/RippleInterruption/ProcessedData/EPSP';


% ------------------------------
% Figure and Font Sizes

forppr = 1;
% If yes, everything set to redimscreen_figforppr1
% If not, everything set to redimscreen_figforppt1

figdir = '/data25/sjadhav/RippleInterruption/Figures/01AugSep11_RippleDisFigs/EPSP/';
summdir = figdir;
set(0,'defaultaxesfontweight','normal'); set(0,'defaultaxeslinewidth',2);

if forppr==1
    set(0,'defaultaxesfontsize',16);
    tfont = 18; % title font
    xfont = 16;
    yfont = 16;
else
    set(0,'defaultaxesfontsize',24);
    tfont = 28;
    xfont = 20;
    yfont = 20;
end

clr = {'b','r','g','c','m','y','k','r'};

grp = 'ExpGrp'; 
%grp = 'ConGrp';

% ---------------------------------------


% In this version, you will use Z-scores already saved in data file
% If you need to re-calculate, use these parameters
pre_frac=0.02; %eg. 0.2*e.samprate: corresponds to secs eg. 0.2 = 200ms
post_frac=0.03; %eg. 0.4*e.samprate
e.samprate=1500;
Fs_e = e.samprate;

% Get window - by time
stimtime=pre_frac*e.samprate*(1000/e.samprate);
resp_win = stimtime + [7, 14]; % ms
resp_win_idx = floor(resp_win*Fs_e/1000);
base_win = stimtime - [19, 1];
base_win_idx = floor(base_win*e.samprate/1000);
startidx = resp_win_idx(1);
endidx = resp_win_idx(2);



novel = 1:3;
fam = 4:8;

set(0,'defaultaxesfontsize',16);set(0,'defaultaxesfontweight','normal');
set(0,'defaultaxeslinewidth',2);

%------------------------------------------------------

cd(processdir);

% Initialize arrays which will hold Z-scores across tetrodes across
% animals, for each Day individually, and also across days

% For each day, across animals and tetrodes
drespZep1 = cell(max(pdays)); %drespZep1 = cell(length(pdays),1);
drespZep2 = cell(max(pdays)); %cell(length(pdays),1);
drespZep3 = cell(max(pdays)); %cell(length(pdays),1);

% Across days, across tetrodes, and across animals
respZep1=[]; respZep2=[]; respZep3=[];


% For novel and fimiliar days
respZep1n=[]; respZep2n=[]; respZep3n=[];
respZep1f=[]; respZep2f=[]; respZep3f=[];

for anim=1:length(prefixes)
    
    prefix=prefixes{anim}
    
    % Loop over "day" files for current animal
    
    %     files=dir([prefix '*']);
    %     for f=1:length(files),
    %
    %         [name,ext]=strtok(files(f).name,'.');
    %         % Can get count of days for animal - Not used currently
    %         daysforanim(f) = str2num(name(end-1:end));
    %         % Loading file gives: day, tets, all_estim, all_eamp, respZsave
    %         files(f).name;
    %         load(files(f).name);
    
    for d=1:length(pdays)
        
        currday = pdays(d);
        file = sprintf('%s/%s_EPSP_Day%02d.mat', processdir, prefix, currday);
        % Loading file gives: day, tets, all_estim, all_eamp, respZsave
        
        
        if exist(file)~=0
            load(file)
  
            for tidx = 1:length(tets)
                
                ctet = tets(tidx); % Current tetrode
                
                % Across day, across tet, across anim
                respZep1 = [respZep1, respZsave{day}{1}{ctet}];
                respZep2 = [respZep2, respZsave{day}{2}{ctet}];
                respZep3 = [respZep3, respZsave{day}{3}{ctet}];
                
                % For each day, across tet, across anim
                drespZep1{day} = [drespZep1{day}, respZsave{day}{1}{ctet}];
                drespZep2{day} = [drespZep2{day}, respZsave{day}{2}{ctet}];
                drespZep3{day} = [drespZep3{day}, respZsave{day}{3}{ctet}];
                
                % For novel and fam days, across tet, across anim
                if ~isempty(intersect(day,novel))
                    respZep1n = [respZep1n, respZsave{day}{1}{ctet}];
                    respZep2n = [respZep2n, respZsave{day}{2}{ctet}];
                    respZep3n = [respZep3n, respZsave{day}{3}{ctet}];
                end
                
                if ~isempty(intersect(day,fam))
                    respZep1f = [respZep1f, respZsave{day}{1}{ctet}];
                    respZep2f = [respZep2f, respZsave{day}{2}{ctet}];
                    respZep3f = [respZep3f, respZsave{day}{3}{ctet}];
                end
            end  % end tidx tets
            
        end % end file for day
        
    end % end if exist
    
end  % End animal


%% PLOTTING

% Across all days, all tets, all anim

[ht12m,pt12m,cit12m] = ttest2(respZep1, respZep2, 0.05);
[ht13m,pt13m,cit13m] = ttest2(respZep1, respZep3, 0.05);

[hk12m, pk12m, cik12m] = kstest2(respZep1, respZep2, 0.05, 'unequal');
[hk13m, pk13m, cik13m] = kstest2(respZep1, respZep3, 0.05, 'unequal');

[p12m,h12m,ci12m] = ranksum(respZep1, respZep2, 'alpha', 0.05);
[p13m,h13m,ci13m] = ranksum(respZep1, respZep3, 'alpha', 0.05);


figure; hold on;  
if forppr==1
    redimscreen_figforppr1;
else
    redimscreen_figforppt1;
end
bar(1,mean(respZep1),'k'); errorbar(1,mean(respZep1),sem(respZep1),'k','LineWidth',3);
bar(2,mean(respZep2),'m'); errorbar(2,mean(respZep2),sem(respZep2),'k','LineWidth',3);
bar(3,mean(respZep3),'m'); errorbar(3,mean(respZep3),sem(respZep3),'k','LineWidth',3);

set(gca,'XTick',[1 2 3],'XTickLabel',{'Pre-Sleep','Post-Sleep1','Post-Sleep2'},'FontSize',xfont,'Fontweight','normal');
title('EPSP Amplitude Z-score normalized to Pre-Sleep','FontSize',tfont,'Fontweight','normal');
ylabel('EPSP Amplitude Z-score','FontSize',yfont,'Fontweight','normal');
axis([0 4 -0.1 0.1])

if ht12m==1,
    mul = sign(mean(respZep2));
    plot(2, mean(respZep2)+1.4*mul*sem(respZep2), 'r*','MarkerSize',8);
end

if ht13m==1,
    mul = sign(mean(respZep3));
    plot(3, mean(respZep3)+1.4*mul*sem(respZep3), 'r*','MarkerSize',8);
end

%set(gca, 'XTickLabel',[]);
%set(gca, 'YTickLabel',[]);

if saveg1==1,
    figfile = [figdir,grp,'_EPSPamp_Zsumm'];
    print('-dpdf', figfile);
    print('-djpeg', figfile);
    saveas(gcf,figfile,'fig');
end


%%% Novel Days Plot

if figopt2==1 && ~isempty(intersect(pdays,novel))
    
    [ht12n,pt12n,cit12n] = ttest2(respZep1n, respZep2n, 0.05);
    [ht13n,pt13n,cit13n] = ttest2(respZep1n, respZep3n, 0.05);
    
    
    figure; hold on;  
    if forppr==1
        redimscreen_figforppr1;
    else
        redimscreen_figforppt1;
    end
    bar(1,mean(respZep1n),'k'); errorbar(1,mean(respZep1n),sem(respZep1n),'k','LineWidth',3);
    bar(2,mean(respZep2n),'m'); errorbar(2,mean(respZep2n),sem(respZep2n),'k','LineWidth',3);
    bar(3,mean(respZep3n),'m'); errorbar(3,mean(respZep3n),sem(respZep3n),'k','LineWidth',3);
    
    set(gca,'XTick',[1 2 3],'XTickLabel',{'Pre-Sleep','Post-Sleep1','Post-Sleep2'},'FontSize',xfont,'Fontweight','normal');
    title('Novel Days: EPSP Amplitude Z-score normalized to Sleep1','FontSize',tfont,'Fontweight','normal');
    ylabel('EPSP Amplitude Z-score','FontSize',yfont,'Fontweight','normal');
    axis([0 4 -0.1 0.1])
    
    if ht12n==1,
        mul = sign(mean(respZep2n));
        plot(2, mean(respZep2n)+1.4*mul*sem(respZep2n), 'r*','MarkerSize',8);
    end
    
    if ht13n==1,
        mul = sign(mean(respZep3n));
        plot(3, mean(respZep3n)+1.4*mul*sem(respZep3n), 'r*','MarkerSize',8);
    end
    
    %set(gca, 'XTickLabel',[]);
    %set(gca, 'YTickLabel',[]);
    
    if saveg2==1,
        figfile = [figdir,grp,'_NovDays_EPSPamp_Zsumm'];
        print('-dpdf', figfile);
        print('-djpeg', figfile);
        saveas(gcf,figfile,'fig');
    end
    
end

%%% Familiar Days Plot

if figopt2==1 && ~isempty(intersect(pdays,fam))
    
    [ht12f,pt12f,cit12f] = ttest2(respZep1f, respZep2f, 0.05);
    [ht13f,pt13f,cit13f] = ttest2(respZep1f, respZep3f, 0.05);
    
    
    figure; hold on;  
    if forppr==1
        redimscreen_figforppr1;
    else
        redimscreen_figforppt1;
    end
    bar(1,mean(respZep1f),'k'); errorbar(1,mean(respZep1f),sem(respZep1f),'k','LineWidth',3);
    bar(2,mean(respZep2f),'m'); errorbar(2,mean(respZep2f),sem(respZep2f),'k','LineWidth',3);
    bar(3,mean(respZep3f),'m'); errorbar(3,mean(respZep3f),sem(respZep3f),'k','LineWidth',3);
    
    set(gca,'XTick',[1 2 3],'XTickLabel',{'Pre-Sleep','Post-Sleep1','Post-Sleep2'},'FontSize',xfont,'Fontweight','normal');
    title('Familiar Days: EPSP Amplitude Z-score normalized to Sleep1','FontSize',tfont,'Fontweight','normal');
    ylabel('EPSP Amplitude Z-score','FontSize',yfont,'Fontweight','normal');
    axis([0 4 -0.1 0.1])
    
    if ht12f==1,
        mul = sign(mean(respZep2f));
        plot(2, mean(respZep2f)+1.4*mul*sem(respZep2f), 'r*','MarkerSize',8);
    end
    
    if ht13f==1,
        mul = sign(mean(respZep3f));
        plot(3, mean(respZep3f)+1.4*mul*sem(respZep3f), 'r*','MarkerSize',8);
    end
    
    %set(gca, 'XTickLabel',[]);
    %set(gca, 'YTickLabel',[]);
    
    if saveg2==1,
        figfile = [figdir,grp,'_FamDays_EPSPamp_Zsumm'];
        print('-dpdf', figfile);
        print('-djpeg', figfile);
        saveas(gcf,figfile,'fig');
    end
    
end

%%% Plotting for individual days %%%

if figopt1==1
    
    
    for d=1:length(pdays)
        
        day = pdays(d);
        
        %         subplot(ceil(length(pdays)/2),2,d); hold on;
        figure; hold on; redimscreen_figforppt1;
        currZ = [mean(drespZep1{day}), mean(drespZep2{day}), mean(drespZep3{day})];
        errZ = [sem(drespZep1{day}), sem(drespZep2{day}), sem(drespZep3{day})];
        %bar([1:3],currZ,'k'); errorbar([1:3],currZ,errZ,'k.');
        
        bar(1,mean(drespZep1{day}),'k'); errorbar(1,mean(drespZep1{day}),sem(drespZep1{day}),'k');
        bar(2,mean(drespZep2{day}),'m'); errorbar(2,mean(drespZep2{day}),sem(drespZep2{day}),'k');
        bar(3,mean(drespZep3{day}),'m'); errorbar(3,mean(drespZep3{day}),sem(drespZep3{day}),'k');
        
        
        set(gca,'XTick',[1 2 3],'XTickLabel',{'Pre','Post1','Post2'},'FontSize',xfont,'Fontweight','normal');
        title(['Day' num2str(pdays(d)) ' : EPSP Amplitude Z-score norm to Sleep1'],'FontSize',tfont,'Fontweight','normal');
        ylabel('EPSP Amplitude Z-score','FontSize',yfont,'Fontweight','normal');
        axis([0 4 -0.5 0.5])
        
        %         if d==1,
        %             title([prefix ' Tet' num2str(tet) ' : Day ' num2str(pdays(day)) ],'FontSize',16,'Fontweight','normal');
        %             ylabel(['Z-scores']);
        %         else
        %             title(['Day ' num2str(pdays(day)) ],'FontSize',16,'Fontweight','normal');
        %         end
        
        [ht12(day), pt12(day), cit12{day}] = ttest2(drespZep1{day}, drespZep2{day}, 0.05);
        [ht13(day), pt13(day), cit13{day}] = ttest2(drespZep1{day}, drespZep3{day}, 0.05);
        
        [hk12(day), pk12(day), cik12{day}] = kstest2(drespZep1{day}, drespZep2{day}, 0.05, 'unequal');
        [hk13(day), pk13(day), cik13{day}] = kstest2(drespZep1{day}, drespZep3{day}, 0.05, 'unequal');
        
        [p12(day),h12(day),ci12{day}] = ranksum(drespZep1{day}, drespZep2{day}, 'alpha', 0.05);
        [p13(day),h13(day),ci13{day}] = ranksum(drespZep1{day}, drespZep3{day}, 'alpha', 0.05);
        
        if ht12(day)==1,
            mul = sign(currZ(2));
            plot(2, (currZ(2)+1.4*mul*errZ(2)), 'r*','MarkerSize',8);
        end
        
        if ht13(day)==1,
            mul = sign(currZ(3));
            plot(3, (currZ(3)+1.4*mul*errZ(3)), 'r*','MarkerSize',8);
        end
        
        if saveg1==1,
            figfile = [figdir,grp,'_EPSPamp_Zsumm_Day',num2str(pdays(day))];
            print('-dpdf', figfile);
            print('-djpeg', figfile);
            saveas(gcf,figfile,'fig');
            saveas(gcf,['Day' num2str(pdays(day)) '_EPSPSlopesumm'],'fig');
        end
        
    end
    
end



if savedata==1,
    savefile = sprintf('/data25/sjadhav/RippleInterruption/ProcessedData/EPSPAmpSumm.mat');
    save(savefile);
end

%keyboard;








