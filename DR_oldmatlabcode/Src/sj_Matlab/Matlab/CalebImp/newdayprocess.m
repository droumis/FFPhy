function newdayprocess(animdir, animprefix, daynum, varargin)

daydirect = pwd;
process_pos = 0;
process_stim = 0;


% options for stimdio processing
% stimdio_windowLength = 4;
% stimdio_winOffset = 2;
stimdio_windowLength = 0.3;
stimdio_winOffset = 0.1;

refelect = {};


[otherOptions] = procOptions(varargin);

% Load times file
times = gettimes(fullfile(daydirect,'times.mat'));
n_epochs = numel(times);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Process Stimstructs
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if (process_stim)
  %% Look for stimstructs and yank eeg windows
  stim_file = dir(fullfile(daydirect,'stimdio.mat'));
  currdir = pwd;
  cd(daydirect);
  stim_file_contents = load(stim_file.name);
  cd(currdir);
  stimdio{daynum} = stim_file_contents.stimdio;
  if numel(stimdio{daynum}) < n_epochs
    stimdio{daynum}{n_epochs} = [];
  end

  %% Save stimdio files
  save(fullfile(animdir, sprintf('%sstimdio%02d.mat',animprefix, daynum)),'stimdio');

  i = 1;
  while isempty(stimdio{daynum}{i})
    i = i + 1;
  end
  n_pins = numel(stimdio{daynum}{i});

  %% Extract eeg windows around stimulation times
  t = [0:30000*stimdio_windowLength-1]/30000 - stimdio_winOffset;
  cd(daydirect)
  d = dir('*.cont');
  if isempty(d)
      error('No CONT files found.');
  end
  cd(currdir);

  for p = 1:n_pins
    for e = 1:n_epochs
      filename = d(i).name;
      if ~isempty(stimdio{daynum}{e}) && ~isempty(stimdio{daynum}{e}{p})
        stimeeg{daynum}{e}{p}.pulsetime = stimdio{daynum}{e}{p}.pulsetimes(:,1);
        stimeeg{daynum}{e}{p}.pulselength = stimdio{daynum}{e}{p}.pulselength;
        stimeeg{daynum}{e}{p}.data = nan(length(t),size(stimdio{daynum}{e}{p}.pulsetimes,1),length(d));
        stimeeg{daynum}{e}{p}.pin = stimdio{daynum}{e}{p}.pin;
        stimeeg{daynum}{e}{p}.type = stimdio{daynum}{e}{p}.type;
        stimeeg{daynum}{e}{p}.t = t;
      end
    end
  end

  for i = 1:length(d)
    for p = 1:n_pins
      for e = 1:n_epochs
        filename = d(i).name;
        if ~isempty(stimdio{daynum}{e}) && ~isempty(stimdio{daynum}{e}{p})
          ts = stimdio{daynum}{e}{p}.pulsetimes(:,1);
          [stimeeg{daynum}{e}{p}.data(:,:,i)] = cont_window_c(filename, ...
            ts/10000 - stimdio_winOffset, stimdio_windowLength);
        end
      end
    end
  end

  if ~isempty(refelect)
    for i = 1:length(d)
      for p = 1:n_pins
        for e = 1:n_epochs
          filename = d(i).name;
          if ~isempty(stimdio{daynum}{e}) && ~isempty(stimdio{daynum}{e}{p})
            for r = 1:length(refelect{i})
              stimeeg{daynum}{e}{p}.data(:,:,i) = ...
                stimeeg{daynum}{e}{p}.data(:,:,i) + stimeeg{daynum}{e}{p}.data(:,:,refelect{i}(r));
            end
          end
        end
      end
    end
  end

  %% Save stimeeg files
  save(fullfile(animdir, sprintf('%sstimeeg%02d.mat',animprefix, daynum)),'stimeeg');
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Process EEGs - convert to 1500 Hz sampling rate, save into EEG .mat files
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Process Spikes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Process position data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if (process_pos)
  fprintf('Processing position data...\n');
  %%% Look for rawpos files generated by Steve's code
  posfiles = dir(fullfile(daydirect,'rawpos_*.mat')); % find rawpos files
  currdir = pwd;
  cd(daydirect)
  for epoch = 1:length(times)
    if ~isempty(times(epoch).starttime)
      rawpos{daynum}{epoch} = readrawpos_steve(posfiles,times(epoch).range);
    end
  end
  cd(currdir);

  %%% Look for .p files

  %%%%%%%%

  %% Save rawpos files
  save(fullfile(animdir, sprintf('%srawpos%02d.mat',animprefix, daynum)),'rawpos');

  %% Convert rawpos to pos using the Steve smoothing code
  pos{daynum} = estimate_position(rawpos{daynum},otherOptions{:});
  save(fullfile(animdir, sprintf('%spos%02d.mat',animprefix, daynum)),'pos');

  %% Smooth velocity with a gaussian kernel
  velocitydayprocess(animdir,animprefix,daynum);
end
