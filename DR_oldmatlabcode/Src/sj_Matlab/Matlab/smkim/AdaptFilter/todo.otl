urgent
	bugs
		convergence check in CSIncrement/CSFunction
	messed up (?)
		Why is tIni at the end?
		kyl [5 4 25 1] is well fit with AF and high learning rate, but not with EM (which predicts a low rate)!
	test
		make test comparision for 2d filtering
		Const Gauss in AF and vis
		CSCompress
	documentation
		*doc the C++ code to make it accessible to others.
		*write explanation on wiki 
			link code doc from wiki explanation
		evalGrad works only for f(x= x_t). Document this explicitely or change.
	extensions/ improvements
		check for convergence in EM
		set second derivative in Grad and calculate from there, rather than assuming ddlogf=0 !
		make variance part of AdaptModel's rather than its own object?!?
			pro: no more type conversions required
			con: overhead! since e.g. AF doesn't need var
		CSFunction::getParam calls getActiveIndices twice! once directly and once via moveTo 
		: then in KalmanSmooth getActiveIndices another two times! for
		: variance calc.
		Mixture of Gaussians?

needed
	(slightly) messed up
		make fields in TData private
	extensions/ improvements
		put spot at x-and-phase, where spike occured!
		CSRectify should check control points in every function like setInitial, etc
		use stored csegx for eval, evalGrad, etc
		getIntegral shouldn't advance time, or should it?
		Catch if user tries to set an unknown parameter
	documentation

maybe
	implement
		class Uniform
