
% SJ - COnvert to a generic version whic loads cells automatically for day and epoch. YOu still need to
% specify trajectory.

% SJ - 12/30/2012. For given day and epoch, take all place cells, or cells that are given, and align
% them for a given trajectory based on peak of linearized position.
% You will then use the alignment order for plotsj_rip_spikeraster_Rolling,
% plotsj_rip_spikeraster_LongEEG, sj_plottrajdatafind3, plotsj_rip_spikeraster, etc also for video.
%                                                           
% From plotsj_rip_spikeraster_Rolling and sj_calcoverlap.
% You will use "linfields" here, generated by DFSsj_placefield2. Plotting also from the placefield
% file
% ------------------------------------------------- 
% SJ - 12/29/2012. From plotsj_rip_spikeraster_LongEEG
% Instead of aligning to an event and plotting spike raster + EEG +
% Position, do it in a long rolling window for he given epoch

%function [pret] = plotsj_rip_spikeraster(prefix, day, epoch, saveg1)
% Shantanu- Dec 2012
% Win - Adding position or velocity to graph to see trajectory clearly

% if nargin<1,
%     keyboard
%     error('Please enter Expt Prefix and Day No!');
% end
% if nargin<2,
%     keyboard
%     error('Please enter Day No!');
% end
% if nargin<3,
%     epoch=2; %% Epoch - 2 or 4 for runs
% end
% if nargin<4
%     saveg1=0; % Save summary figure
% end

close all;
clear; saveg1=0;
prefix='HPa';
day=1; epoch=4;

% traj1=3; %OutRight
% traj2=4; %InRight

traj1=1; %OutLeft
traj2=2; %InLeft

switch prefix
    case 'HPa'
        directoryname = '/data25/sjadhav/HPExpt/HPa_direct';
        dire = '/data25/sjadhav/HPExpt/HPa';
    case 'HPb'
        directoryname = '/data25/sjadhav/HPExpt/HPb_direct';
        dire = '/data25/sjadhav/HPExpt/HPb';
end

currdir = pwd;
if (directoryname(end) == '/')
    directoryname = directoryname(1:end-1);
end
if (dire(end) == '/')
    dire = dire(1:end-1);
end
if (day < 10)
    daystring = ['0',num2str(day)];
else
    daystring = num2str(day);
end
animdirect = directoryname;

% Get time ranges from times file - No need
%----------------------------------
cd(dire);
dirlist = dir('*');
for i=2:length(dirlist)
    currname = dirlist(i).name;
    if strcmp(currname(1:2),daystring)
        daydir = currname;
        break;
    end
end
timesfile = sprintf('%s/%s/times.mat',dire,daydir);
load(timesfile);
nranges=1;
range1=ranges(epoch+1,:);


% -----------------------------------------
% SET DATA
% -------------------------------------------

% Get cells
% ---------

cellinfofile = sprintf('%s/%scellinfo.mat', directoryname, prefix);
load(cellinfofile);

% CA1 cells
%filterString = '( ($meanrate > 0.1) && ~strcmp($tag, ''iCA1Int'') && ~strcmp($tag, ''CA1Int'') && (strcmp($tag2, ''CA1Pyr'') || strcmp($tag2, ''iCA1Pyr'')) ) ';
filterString = '( (strcmp($tag2, ''CA1Pyr'') || strcmp($tag2, ''iCA1Pyr'')) && ($meanrate > 0.1) && ~strcmp($tag, ''iCA1Int'') && ~strcmp($tag, ''CA1Int'') ) ';
cellindices = evaluatefilter(cellinfo{day}{epoch}, filterString);
cellsi = [repmat([day epoch], size(cellindices,1),1 ), cellindices]; % day-epoch-tet-cell for CA1 cells
lastidx = size(cellsi,1); % For HPa d2 ep4, last cell not in linfields, so skip for now.
cellsi(lastidx,:)=[];
usecellsi = 1:size(cellsi,1); 


% %HPa - day 2. CA1 cells. Use the listed ones.
% %CA1
% cellsi(1,:) = [day epoch 1 1]; % 4
% cellsi(2,:) = [day epoch 1 2]; % 15
% cellsi(3,:) = [day epoch 1 3]; % 1
% cellsi(4,:) = [day epoch 1 4]; % 12
% cellsi(5,:) = [day epoch 1 5]; % 5
% cellsi(6,:) = [day epoch 1 6]; % 11
% cellsi(7,:) = [day epoch 4 1]; % 13
% cellsi(8,:) = [day epoch 4 2]; %
% cellsi(8,:) = [day epoch 4 3]; % 9
% cellsi(9,:) = [day epoch 4 4]; % 8
% cellsi(10,:) = [day epoch 4 5]; % 6
% cellsi(11,:) = [day epoch 4 6]; % 7
% cellsi(12,:) = [day epoch 7 1]; % 14
% cellsi(13,:) = [day epoch 8 1]; % 3 
% cellsi(14,:) = [day epoch 12 2]; % 2 
% cellsi(15,:) = [day epoch 14 1]; % 10
% usecellsi=1:15;
% usecells = [1:14];

% linfields data
% ------------

linfieldfile = sprintf('%s/%slinfields%02d.mat', animdirect, prefix, day);
load(linfieldfile);

for i=1:size(cellsi,1)    
    try
        currlf = linfields{day}{epoch}{cellsi(i,3)}{cellsi(i,4)}; %day, epoch, tet, cell  
    catch
        cellsi(i,3), cellsi(i,4),
        keyboard;
    end
    lf1 = currlf{traj1}(:,5); % Norm Occ Rate for traj 1.
    lf2 = currlf{traj2}(:,5);
    lfcomb = mean([lf1,lf2],2); % Combine In and Out. Dominant Trajectory will define position in order
    % Save trajs
    lin_traj1{i}=lf1;  lin_traj2{i}=lf2;  lin_trajcomb{i}=lfcomb; 
    
    % Get peak positions
    [peak_traj1(i), pos_traj1(i)] = max(lf1); 
    [peak_traj2(i), pos_traj2(i)] = max(lf2); 
    [peak_trajcomb(i), pos_trajcomb(i)] = max(lfcomb); 
end 
    
% Get Sort order
% --------------
[~,sort1] = sort(pos_traj1); % By traj1 - eg. 3=Out Right or 1=Out Left
[~,sort2] = sort(pos_traj2); % By traj2 - eg. 4=In Right or 2=In Left
[~,sortcomb] = sort(pos_trajcomb); % By trajcomb - eg. Combine Out and In Right/ Left

% Return ordered list
cellsi_sorttraj1 = cellsi(sort1',:);
cellsi_sorttraj2 = cellsi(sort2',:);
cellsi_sorttrajcomb = cellsi(sortcomb',:);

% ------------------------------
% PLOT
% ------------------------------
% Figure and Font Sizes
forppr = 0;
% If yes, everything set to redimscreen_figforppr1
% If not, everything set to redimscreen_figforppt1
set(0,'defaultaxesfontweight','normal'); set(0,'defaultaxeslinewidth',2);

if forppr==1
    set(0,'defaultaxesfontsize',16);
    tfont = 18; % title font
    xfont = 16;
    yfont = 16;
else
    set(0,'defaultaxesfontsize',24);
    tfont = 28;
    xfont = 20;
    yfont = 20;
end
clr = {'b','m','g','y','c','k','r','b','g','y','b','m','g','y','c','k','r','b','g','y','b','m','g','y','c','k','r','b','g','y'};
clr1='k';
clr2='r';
datadir = '/data25/sjadhav/HPExpt/HPa_direct/ProcessedData/';
figdir = '/data25/sjadhav/HPExpt/HPa_direct/Figures/';
% ---------------------------------------

figure(1); hold on; % Traj1
figure(2); hold on; % Traj2
figure(3); hold on; % Traj3

for i=1:length(sort1)
    %1) Traj1
    currlintraj = lin_traj1{sort1(i)};
    currlintraj(find(isnan(currlintraj))) = 0;
    currlintraj = currlintraj/max(currlintraj); % Normalize
    xax = 2*(1:length(currlintraj));
    figure(1); hold on;
    plot(xax, currlintraj ,[clr{i} '.-'],'Linewidth',2);
    %text(pos_traj1(sort1(i)), peak_traj1(sort1(i)),num2str(sort1(i)),'Color',[clr{i}]); 
    text(2*pos_traj1(sort1(i)), 1.02,num2str(sort1(i)),'Color',[clr{i}],'FontSize',14,'Fontweight','bold'); 
    %2) Traj2
    currlintraj = lin_traj2{sort2(i)};
    currlintraj(find(isnan(currlintraj))) = 0;
    currlintraj = currlintraj/max(currlintraj); % Normalize
    xax = 2*(1:length(currlintraj));
    figure(2); hold on;
    plot(xax, currlintraj ,[clr{i} '.-'],'Linewidth',2);
    text(2*pos_traj2(sort2(i)), 1.02,num2str(sort2(i)),'Color',[clr{i}],'FontSize',14,'Fontweight','bold'); 
    %3) TrajComb
    currlintraj = lin_trajcomb{sortcomb(i)};
    currlintraj(find(isnan(currlintraj))) = 0;
    currlintraj = currlintraj/max(currlintraj); % Normalize
    xax = 2*(1:length(currlintraj));
    figure(3); hold on;
    plot(xax, currlintraj ,[clr{i} '.-'],'Linewidth',2);
    text(pos_trajcomb(i), peak_trajcomb(i),num2str(sortcomb(i)),'Color',[clr{i}]); 
    text(2*pos_trajcomb(sortcomb(i)), 1.02,num2str(sortcomb(i)),'Color',[clr{i}],'FontSize',14,'Fontweight','bold'); 

    if i==length(sort1)
        figure(1); hold on;  set(gca,'YLim',[0 1.1])
        title(['Traj ',num2str(traj1)],'FontSize',14,'Fontweight','bold');
        xlabel ('Position along linear trajectory (cm)','FontSize',14,'Fontweight','bold');
        figure(2); hold on;  set(gca,'YLim',[0 1.1])
        title(['Traj ',num2str(traj2)],'FontSize',14,'Fontweight','bold');
        xlabel ('Position along linear trajectory (cm)','FontSize',14,'Fontweight','bold');
        figure(3); hold on;  set(gca,'YLim',[0 1.1])
        title(['Traj ',num2str(traj1),' & ',num2str(traj2)],'FontSize',14,'Fontweight','bold');
        xlabel ('Position along linear trajectory (cm)','FontSize',14,'Fontweight','bold');
    end
end
  
if saveg1==1
    figfile = [figdir,'n',prefix,'_Day',num2str(day),'Ep',num2str(epoch),'Stim',num2str(i),'_RipEg1'];
    print('-dpdf', figfile);
    print('-djpeg', figfile);
    saveas(gcf,figfile,'fig');
end

sortcomb
% *************************************************************************

%cd(datadir);
%keyboard;

