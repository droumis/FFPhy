function [spikes,aspkfile]=sss_joinspkfilesforsort_1(files)

%% Equivalent to sss_joinspikefile_cont5, but push times in a better way so
%% that it is easy to deconstruct spike times after sort to save in
%% individual files. Has to have Similar Spike Cut Parameters

%% Assume that no file will run longer than 10000secs/ safer/ use
%% 10^5+swtimes, and 10^8*fstimes for each file and push

%% For joining spk files in multiple directories before sorting. By
%% default, you have to adjust spike times to prevent overlap of spktimes
%% during sorting
%% POST Sort, deconstruct the spikesagain based on fstimes, and 

%% sss_joinsortedfiles_cont5({'spike_cut_tet_thr5_allpart1a_sort1.mat'; 'spike_cut_tet_thr5_allpart1b_sort1rename.mat'; 'spike_cut_tet_thr5_allpart2_sort1rename.mat'});

%%%%%%%%%%%%

%%%% Initialize finalallspks
ch=1:4;
finalallspks.waveforms=[];
for nch=ch(1):ch(4)
    cmd=sprintf('finalallspks.waveforms_ch%d = [];',nch); eval(cmd);
end
finalallspks.spiketimes=[]; finalallspks.swtimes=[];
finalallspks.fstimes=[];finalallspks.ftimes=[];
finalallspks.sweep = [];finalallspks.trial = [];
finalallspks.stimulus = []; finalallspks.igorstim = [];finalallspks.nsweeps = 0;
finalallspks.hierarchy.assigns=[];
finalallspks.sweepall=[];

push_swtimes=0; push_fstimes=0;

%%Start loop
for n=1:size(files,1)
    n
    filename=[files{n}];
    load(filename);
    
    if n==1,
        finalallspks.Fs=spikes.Fs;
        finalallspks.threshT=spikes.threshT;
        finalallspks.threshV=spikes.threshV;
    end

    finalallspks.spiketimes=[finalallspks.spiketimes; spikes.spiketimes]; 
    finalallspks.ftimes=[finalallspks.ftimes; spikes.ftimes ];               
    
    push_swtimws=n*10^
    finalallspks.swtimes=[finalallspks.swtimes; spikes.swtimes + push_swtimes];             
    push_swtimes=(finalallspks.swtimes(end));
    
    finalallspks.fstimes=[finalallspks.fstimes; spikes.fstimes + push_fstimes];      
    push_fstimes=(finalallspks.fstimes(end));

    finalallspks.waveforms=[finalallspks.waveforms; spikes.waveforms];
    for nch=ch(1):ch(4),
        cmd=sprintf('finalallspks.waveforms_ch%d = [finalallspks.waveforms_ch%d;  spikes.waveforms_ch%d];',nch, nch, nch); eval(cmd);
    end

    %if n==size(files,1), save temp finalallspks; end

    clear spikes

end % file loop

clear n files
clear ch
finalallspks.nsweeps=floor(max(finalallspks.fstimes)/1000);


%%%%% DO NOT COMBINE FOR FINAL WAVEFORMS: TOO BIG%%%%%%%%%%%%%%
% for nch=1:ch
%     cmd=sprintf('finalallspks.waveforms = [ finalallspks.waveforms; finalallspks.waveforms_ch%d];',nch); eval(cmd);
% end
%finalallspks.waveforms = finalallspks.waveforms;

%save ('finalfile', 'finalallspks');
spikes=finalallspks;
save ('joinedfile', 'spikes');


