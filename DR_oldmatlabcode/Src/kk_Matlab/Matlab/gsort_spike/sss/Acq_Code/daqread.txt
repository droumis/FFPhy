ox   daqread Read a Data Acquisition Toolbox (.daq) file Syntaxdata = daqread('file')
data = daqread('file','PropertyName',PropertyValue,...)
[data,time] = daqread(...)
[data,time,abstime] = daqread(...)
[data,time,abstime,events] = daqread(...)
[data,time,abstime,events,daqinfo] = daqread(...)
daqinfo = daqread('file','info')
Arguments'file'A Data Acquisition Toolbox (.daq) file.'PropertyName'A daqread property name.PropertyValueA daqread property value.'info'Specifies that device object and hardware information are to be returned.dataAn m-by-n array where m is the number of samples and n is the number of channels.timeAn m-by-1 array of relative time values where m is the number of samples.abstimeThe absolute time of the first trigger.eventsA structure containing event information.daqinfoA structure containing device object and hardware information.Descriptiondata = daqread('file') reads all the data from file. data is an m-by-n data matrix where m is the number of samples and n is the number of channels. If data includes data from multiple triggers, then m is increased by the number of triggers because of the addition of NaN's. data = daqread('file','PropertyName',PropertyValue,...) reads the specified data from file. The amount of data returned and the format of the data is specified with the properties shown below.Property NameDescriptionSamplesSpecify the sample range.TimeSpecify the relative time range.TriggersSpecify the trigger range.ChannelsSpecify the channel range. Channel names can be specified as a cell array.DataFormatSpecify the data format as doubles or native.TimeFormatSpecify the time format as vector or matrix.The Samples, Time, and Triggers properties are mutually exclusive. [data,time] = daqread(...) returns sample-time pairs. time is a vector with the same length as data and contains the relative time for each sample. Relative time is measured with respect to the first trigger that occurs. [data,time,abstime] = daqread(...) returns sample-time pairs and the absolute time of the first trigger. abstime is returned as a clock vector. [data,time,abstime,events] = daqread(...) returns sample-time pairs, the absolute time of the first trigger, and a log of events. events contains the appropriate events based on the Samples, Time, or Triggers value specified. The entire event log is returned only if Samples, Time, or Triggers is not specified. [data,time,abstime,events,daqinfo] = daqread(...) returns sample-time pairs, the absolute time, the event log, and the structure daqinfo, which contains two fields: ObjInfo and HwInfo. ObjInfo is a structure containing property name/property value pairs and HwInfo is a structure containing hardware information. The entire event log is returned to daqinfo.ObjInfo.EventLog. daqinfo = daqread('file','info') returns the structure daqinfo, which contains two fields: ObjInfo and HwInfo. ObjInfo is a structure containing property name/property value pairs and HwInfo is a structure containing hardware information. The entire event log is returned to daqinfo.ObjInfo.EventLog. RemarksMore About .daq FilesThe format used by daqread to return data, relative time, absolute time, and event information is identical to the format used by the getdata function. If data from multiple triggers is read, then the size of the resulting data array is increased by the number of triggers issued because each trigger is separated by a NaN. ObjInfo.EventLog always contains the entire event log regardless of the value specified by Samples, Time, or Triggers. The UserData property value is not restored when you return device object (ObjInfo) information. Data Acquisition Toolbox (.daq) files are created by specifying a value for the LogFileName property (or accepting the default value), and configuring the LoggingMode property to Disk or Disk&Memory. ExampleSuppose you configure the analog input object ai for a National Instruments board as shown below. The object acquires one second of data for four channels, and saves the data to the output file data.daq. ai = analoginput('nidaq',1);
chans = addchannel(ai,0:3);
set(ai,'SampleRate',1000)
ActualRate = get(ai,'SampleRate');
set(ai,'SamplesPerTrigger',ActualRate)
set(ai,'LoggingMode','Disk&Memory')
set(ai,'LogFileName','data.daq')
start(ai)
After the data has been collected and saved to a disk file, you can retrieve the data and other acquisition-related information using daqread. To read all the sample-time pairs from data.daq: [data,time] = daqread('data.daq');
To read samples 500 to 1000 for all channels from data.daq: data = daqread('data.daq','Samples',[500 1000]);
To read the first 0.5 seconds of data for channels 1 and 2 from data.daq: data = daqread('data.daq','Time',[0 0.5],'Channels',[1 2]);
To obtain the channel property information from data.daq: daqinfo = daqread('data.daq','info');
chaninfo = daqinfo.ObjInfo.Channel;
To obtain a list of event types and event data contained by data.daq: daqinfo = daqread('data.daq','info');
events = daqinfo.ObjInfo.EventLog;
event_type = {events.Type};
event_data = {events.Data}