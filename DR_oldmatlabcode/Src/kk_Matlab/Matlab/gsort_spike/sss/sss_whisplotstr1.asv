

nclu=1;
nspk1=0; nspk2=0; nspk3=0; retcnt=1; procnt=1;

cluspks=alldatastr.spkstim(:,1); cluspks2=alldatastr.spkstim(:,nclu+1);  cluspks3=alldatastr.spkstim(:,nclu+2);
corrcnt=1;
for tr=10:80

    %if ((tr~=41)&(tr~=59))
    %if tr==41; keyboard; end
    stiminfo=alldatastr.stim{tr};
    xwhist=stiminfo(:,1); xwhisd=stiminfo(:,2);
    xwhist=xwhist(1:3200); xwhisd=xwhisd(1:3200);   %%%% FIRST 800ms only

    xspk=(cluspks{tr}); xspk2=double(cluspks2{tr}); xspk3=double(cluspks3{tr});
    xspk=xspk(find ( xspk>=xwhist(1) & xspk<=xwhist(end)));
    xspk2=xspk2(find ( xspk2>=xwhist(1) & xspk2<=xwhist(end) ));
    xspk3=xspk3(find ( xspk3>=xwhist(1) & xspk3<=xwhist(end) ));

    %xspk=xspk(1:800);  xspk2=xspk2(1:800);  xspk3=xspk3(1:800);

    dc=find ( ((xwhisd(2:end-1)- xwhisd(1:end-2)) ==0) & ((xwhisd(3:end)- xwhisd(1:end-2)) ==0));


    %%% FIND CONTIGUOUS DC PARTS
    markidxs=dc([find(diff(dc)>1)+1]);  markidxs=[dc(1); markidxs];
    markidxs2=dc([find(diff(dc)>1)]);  markidxs2=[markidxs2; dc(end)];

    for i=1:length(markidxs);
        xspk(find ( xspk>=xwhist(markidxs(i)) & xspk<=xwhist(markidxs2(i)) ))=[];
        xspk2(find ( xspk2>=xwhist(markidxs(i)) & xspk2<=xwhist(markidxs2(i)) ))=[];
        xspk3(find ( xspk3>=xwhist(markidxs(i)) & xspk3<=xwhist(markidxs2(i)) ))=[];
    end

    dc=[1;dc;length(xwhisd)];
    xwhist(unique(dc))=[]; xwhisd(unique(dc))=[];

    xwhisd=roundn(xwhisd,-2);
    [b,a]=cheby1(3,1,20/2000,'high');  xwhisdfil=filtfilt(b,a,xwhisd);

    vel= diff(xwhisd(2:end));  vel = smoothpsth(vel,10);
    acc= diff(vel(1:end));  acc=smoothpsth(acc,10);

    %bins=ceil( max ((xwhist(end)-xwhist(1))/50) );
    binsize = 1*(xwhist(end)-xwhist(1))/(xwhist(end)-xwhist(1));
    edges=xwhist(1):binsize:xwhist(end);
    
    if length(xspk)==0, xspk=xwhist(1); end;
    if length(xspk2)==0, xspk2=xwhist(1); end;
    if length(xspk3)==0, xspk3=xwhist(1); end;
    
    [psth1,loc1]=histc(xspk,edges);
    [psth2,loc]=histc(xspk2,edges);
    [psth3,loc]=histc(xspk3,edges);

    psth1=smoothpsth(psth1,5);
    psth2=smoothpsth(psth2,5);
    %%% RAW Whisker DATA and VEL/ACC, RASTER/PSTH PLOTS %%%


    figure; hold on;
    text(xwhist(length(xwhist/10)),25 ,['Trial:' num2str(tr) ])
    %subplot(2,1,1); hold on;
    %plot(xwhist,xwhisd,'b.');
    plot(xwhist,10+xwhisdfil*3,'b','LineWidth',2);
    
    plot(xspk,10*ones(size(xspk)),'k.','markersize',16);
    plot(xspk2,15*ones(size(xspk2)),'g.','markersize',16);
    plot(xspk3,20*ones(size(xspk3)),'m.','markersize',16);


    %PSTH=[psth1;psth2;psth3]';
    %LOC=[loc1;loc2;loc3]';
    %bar(LOC,PSTH*5,1.5);

    %bar(edges,psth1*100,'histc');
    plot(edges,2+psth2*50,'g','LineWidth',2);
    plot(xwhist(3:end),(abs(vel*50)),'r', 'LineWidth',2); %plot(xwhist(4:end),(acc*100),'c');


    %%%%%%%------------------------------------------------------------
    %%%%%%%--------

    %%%% CROSS CORRELATION: FR and Postion

    %%% Compress Whisker data to 1ms resolution to match vector
    %%% length with spike data


%     len=floor(length(xwhisd)/4);
%     whiskd=zeros(len,1);
% 
%     for n=1:len
%         whiskd(n)=mean(xwhisd(4*(n-1)+1:4*(n-1)+4));
%     end
% 
%     vel=smooth((diff(whiskd(1:end))),20);
%     acc=smooth ((diff(vel(1:end))),20);
% 
%     [cross1(corrcnt,:), lags1]=xcorr(acc,psth1,50,'none');
%     [cross2(corrcnt,:), lags1]=xcorr(acc,psth2,50,'none');
%     [cross3(corrcnt,:), lags1]=xcorr(acc,psth3,50,'none');
% 
%     [cross1sn(corrcnt,:)]=xcorr(acc,psth1,50)/sum(psth1);
%     [cross2sn(corrcnt,:)]=xcorr(acc,psth2,50)/sum(psth2);
%     [cross3sn(corrcnt,:)]=xcorr(acc,psth3,50)/sum(psth3);
% 
%     nspk1=nspk1+sum(psth1); nspk2=nspk2+sum(psth2); nspk3=nspk3+sum(psth3);
% 
%     auto1(corrcnt,:)=xcorr(acc,50,'none');
%     corrcnt=corrcnt+1;
    %autocorr(tr,:)=xcorr(whisktr,50,'coeff')';
    %cross1(tr,:)=cross1(tr,:)/sum( spks(tr,:));
    %cross1(tr,:)=cross1(tr,:)/autocorr;
    %totalspks(nclu,1)= totalspks(nclu,1)+sum( spks(tr,:));
    %totalspks= totalspks + sum(spks(tr,:));

    %%%%%%%------------------------------------------------------------
    %%%%%%%--------RETRACTIONS AND PROTRACTIONS


    [tret,tpro,ret,pro] = find_pro_ret3(xwhist,xwhisd);

    for nr=1:size(tret,1)
        retrac{retcnt}=ret{nr};
        rettime{retcnt}=tret{nr};
        retspk1{retcnt}= xspk(find ( xspk>=min(tret{nr}) & xspk<=max(tret{nr})));
        retspk2{retcnt}= xspk2(find ( xspk2>=min(tret{nr}) & xspk2<=max(tret{nr})));
        retspk3{retcnt}= xspk3(find ( xspk3>=min(tret{nr}) & xspk3<=max(tret{nr})));
        retcnt=retcnt+1;
    end

    for np=1:size(tpro,1)
        protrac{procnt}=pro{np};
        protime{procnt}=tpro{np};
        prospk1{procnt}= xspk(find ( xspk>=min(tpro{np}) & xspk<=max(tpro{np})));
        prospk2{procnt}= xspk2(find ( xspk2>=min(tpro{np}) & xspk2<=max(tpro{np})));
        prospk3{procnt}= xspk3(find ( xspk3>=min(tpro{np}) & xspk3<=max(tpro{np})));
        procnt=procnt+1;
    end

    %end %%% end if
end      %%% end for tr



%%%%%%%%%%%%%%%%%% PLOT PRO-RET %%%%%%%%%%%%%%%%%%%%

figure(100); hold on;
totalrspk1=[]; totalrspk2=[]; totalrspk3=[];
for nr=1:size(retrac,2),
    xtime=rettime{nr}; xret=retrac{nr};
    rspk1=retspk1{nr}; rspk2=retspk2{nr}; rspk3=retspk3{nr};

    %% For raster bins
    %     edges=min(xtime):1:max(xtime); bins=ceil( max(xtime)-min(xtime));
    %     rpsth1{nr}=histc(rspk1,edges); rpsth2{nr}=histc(rspk2,edges); rpsth3{nr}=histc(rspk3,edges);
    %      edges=0:10:100; bins=ceil( max(xtime)-min(xtime));
    %     rpsth1(nr,:)=histc(rspk1,edges); rpsth2(nr,:)=histc(rspk2,edges); rpsth3(nr,:)=histc(rspk3,edges);

    %% OR for PSTH, save adjusted spike-times, and do psth at end
    totalrspk1=[totalrspk1;rspk1-min(xtime)];
    totalrspk2=[totalrspk2;rspk2-min(xtime)];
    totalrspk3=[totalrspk3;rspk3-min(xtime)];

    %%
    rspk1=rspk1-min(xtime); rspk2=rspk2-min(xtime); rspk3=rspk3-min(xtime);
    subplot(3,1,1); hold on;
    title('Retractions');
    plot(rspk1,nr*ones(size(rspk1)),'k.','markersize',16);
    plot(rspk2,nr*ones(size(rspk2)),'g.','markersize',16)
    plot(rspk3,nr*ones(size(rspk3)),'m.','markersize',16)

    subplot(3,1,2); hold on;
    xtime=xtime-min(xtime);
    plot(xtime,xret);
end

% figure(10); hold on;
% plot(rettime{nr}, retrac{nr});

figure(110);
edges=0:20:100;
rpsth1=histc(totalrspk1,edges); rpsth2=histc(totalrspk2,edges); rpsth3=histc(totalrspk3,edges);
subplot(3,1,1);hold on; bar(edges,rpsth1);  title('Retractions');
subplot(3,1,2);hold on; bar(edges,rpsth2,'r');
subplot(3,1,3);hold on; bar(edges,rpsth3,'g');


figure(101); hold on;
totalrspk1=[]; totalrspk2=[]; totalrspk3=[];
for np=1:size(protrac,2),
    xtime=protime{np}; xpro=protrac{np};
    rspk1=prospk1{np}; rspk2=prospk2{np}; rspk3=prospk3{np};

    %% For 1ms raster bins
    %     edges=min(xtime):1:max(xtime); bins=ceil( max(xtime)-min(xtime));
    %     rpsth1=histc(rspk1,edges); rpsth2=histc(rspk2,edges); rpsth3=histc(rspk3,edges);
    %%

    %% OR for PSTH, save adjusted spike-times, and do psth at end
    totalrspk1=[totalrspk1;rspk1-min(xtime)];
    totalrspk2=[totalrspk2;rspk2-min(xtime)];
    totalrspk3=[totalrspk3;rspk3-min(xtime)];

    rspk1=rspk1-min(xtime); rspk2=rspk2-min(xtime); rspk3=rspk3-min(xtime);
    subplot(3,1,1); hold on;
    title('Protractions');
    plot(rspk1,np*ones(size(rspk1)),'k.','markersize',16);
    plot(rspk2,np*ones(size(rspk2)),'g.','markersize',16)
    plot(rspk3,np*ones(size(rspk3)),'m.','markersize',16)

    subplot(3,1,2); hold on;
    xtime=xtime-min(xtime);
    plot(xtime,xpro);
end

% figure(11); hold on;
% plot(protime{1}, protrac{1});

figure(111);
edges=0:20:100;
rpsth1=histc(totalrspk1,edges); rpsth2=histc(totalrspk2,edges); rpsth3=histc(totalrspk3,edges);
subplot(3,1,1);hold on; bar(edges,rpsth1); title('Protractions');
subplot(3,1,2);hold on; bar(edges,rpsth2,'r');
subplot(3,1,3);hold on; bar(edges,rpsth3,'g');



%  figure; hold on;
%         spy(spk_retr,'k.',8);  %CAN USE SPY OR STR_RASTERCELL FOR RASTER PLOT
%         axis fill; axis xy; axis([0, size(spk_retr,2),(-1/8)*size(spk_retr,1), size(spk_retr,1)]);
%         plot(1:size(spk_retr,2), zeros(size(spk_retr,2)),'b.','MarkerSize',2);
%         %PSTH:  METHOD1
%         del_y = (1/8)* size(spk_retr,1);   %SCALE DOWN PSTH TO 1/8(SIZE RASTER)
%         psth_win1=sum(spk_retr,1);
%         psth_win1 = psth_win1*(del_y/max(psth_win1));
%         psth_win1=psth_win1-max(psth_win1);
%         stairs(psth_win1);
%
%         figure; hold on; clr=['k' 'b' 'r' 'g' 'c' 'y' 'm'];
%         for nr=1:ret_cnt-1,
%             plot(retractions(nr,:),'b.');
%         end




%%%%%%%%%%%%%  CROS CORRELATION PLOTS%%%%%%%%%%%%%%%%5
%     mauto1=mean(auto1,1);
%     mcross1=mean(cross1,1); mncross1=mcross1./abs(mauto1);
%     mcross2=mean(cross2,1); mncross2=mcross2./abs(mauto1);
%     mcross3=mean(cross3,1); mncross3=mcross3./abs(mauto1);
%
%
%     %     mauto1=mean(auto1,1);
%     %     csd_mncross1=(mcross1)./(mauto1);
%     %     mncross1=ifft(csd_mncross1,256);
%
%     figure; hold on;
%     plot(lags1,mncross1,'k','LineWidth',3);
%     % max(mncross1)/50;
%     %plot(0*(1:51),min(mcross1):(max(mcross1)-min(mcross1))/50:max(mcross1),'k.');
%
%     figure; hold on;
%     %subplot(3,1,1); hold on;
%     plot(lags1,mncross2,'k','LineWidth',3);
%     % max(mncross1)/50;
%     %plot(0*(1:51),min(mcross2):(max(mcross2)-min(mcross2))/50:max(mcross2),'k.');
%
%     figure; hold on;
%     %subplot(3,1,1); hold on;
%     plot(lags1,mncross3,'k','LineWidth',3);
%     % max(mncross1)/50;
%     %plot(0*(1:51),min(mcross3):(max(mcross3)-min(mcross3))/50:max(mcross3),'k.');
%
%     figure; hold on;
%     %subplot(3,1,1); hold on;
%     plot(lags1,mauto1,'k','LineWidth',3);
%     % max(mncross1)/50;
%     %plot(0*(1:51),min(mcross1):(max(mcross1)-min(mcross1))/50:max(mcross1),'k.');
%
%
%     figure; hold on;
%     %subplot(3,1,1)
%     plot(lags1,mean(cross1sn,1),'k','LineWidth',3); text(50, 5, ['Nspk: ' num2str(nspk1)]);
%     %subplot(3,1,2)
%     figure; hold on;
%     plot(lags1,mean(cross2sn,1),'k','LineWidth',3); text(50, 5, ['Nspk: ' num2str(nspk2)]);
%     %subplot(3,1,3)
%     figure; hold on;
%     plot(lags1,mean(cross3sn,1),'k','LineWidth',3); text(50, 5, ['Nspk: ' num2str(nspk3)]);
%


%     text(5,0,['STA: Nspks: ' num2str(totalspks)]);
%     subplot(3,1,3); hold on;
%     plot(f,mauto1,'r','LineWidth',3);
%     %max(mauto1)/50;plot(0*(1:51),min(mauto1):(max(mauto1)-min(mauto1))/50:max(mauto1),'k.');
%     text(5,5,['Autocorr: Nspks: ' num2str(totalspks)]);

%%%%%%%%%%%%%  CROS CORRELATION PLOTS%%%%%%%%%%%%%%%%5





