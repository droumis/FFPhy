% spike waveform features to measure:
%   peak_time - trough_time
%   (trough_time - half_trough_time_before) / (half_trough_time_after - trough_time)
%   -trough_amplitude / peak_amplitude

path_prefix = '/data14/smkim/';
subjects = {'S48','S58','S59','S60','S61'};

x = struct('uid',[], ...
    'region',[], ...
    'peak_trough_width',[], ...
    'trough_half_amplitude_width',[], ...
    'peak_half_amplitude_width',[], ...
    'trough_assymmetry',[], ...
    'trough_peak_amplitude_ratio',[]);
unit_count = 0;

for i = 1:length(subjects)
  flist = dir(sprintf('%s/%s/spike/%s_day*_unit.mat',path_prefix,subjects{i},subjects{i}));
  for j = 1:length(flist)
    load(sprintf('%s/%s/spike/%s',path_prefix,subjects{i},flist(j).name));
    unique_uids = unique({unit(:).uid});
    for k = 1:numel(unique_uids)
      unit_count = unit_count + 1;
      x(unit_count).uid = unique_uids{k};
      l = find(strcmp(unique_uids{k},{unit(:).uid}));
      tmp_shape = [unit(l).shape];
      maximum_amplitude_channel = unique([unit(l).maximum_amplitude_channel]);
      if numel(maximum_amplitude_channel) ~= 1
        error('i got something wrong');
      end
      channel_select = struct( ...
          'type',{'()'},'subs',{{':',maximum_amplitude_channel}});
      region = unique({unit(l).region});
      if numel(region) ~= 1
        error('i got something wrong');
      end
      x(unit_count).region = region{1};
      x(unit_count).peak_trough_width = subsref(nanmedian(...
          vertcat(tmp_shape(:).peak_time) - ...
          vertcat(tmp_shape(:).trough_time)), ...
          channel_select);
      x(unit_count).trough_half_amplitude_width = subsref(nanmedian(...
          vertcat(tmp_shape(:).half_trough_time_after) - ...
          vertcat(tmp_shape(:).half_trough_time_before)), ...
          channel_select);
      x(unit_count).peak_half_amplitude_width = subsref(nanmedian(...
          vertcat(tmp_shape(:).half_peak_time_after) - ...
          vertcat(tmp_shape(:).half_peak_time_before)), ...
          channel_select);
      x(unit_count).trough_assymmetry = subsref(nanmedian(...
          (vertcat(tmp_shape(:).half_trough_time_after) - ...
          vertcat(tmp_shape(:).trough_time)) ./ ...
          (vertcat(tmp_shape(:).trough_time) - ...
          vertcat(tmp_shape(:).half_trough_time_before))), ...
          channel_select);
      x(unit_count).trough_peak_amplitude_ratio = subsref(nanmedian(...
          -vertcat(tmp_shape(:).trough_amplitude) ./ ...
          vertcat(tmp_shape(:).peak_amplitude)), ...
          channel_select);
    end
    clear('unit');
  end
end


